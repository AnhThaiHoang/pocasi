/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pocasi;
/**
 *
 * @author bohou
 */
public class Manager extends javax.swing.JFrame {

    public boolean AktivHodiny;
    public boolean AktivHWeatherByCity;
    public boolean AktivWeatherForecast;
    public boolean AktivSearch;
    private static Okno o;

    
    /**
     * Creates new form Manager
     */
    public Manager() {
        initComponents();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hodiny = new javax.swing.JCheckBox();
        Search = new javax.swing.JCheckBox();
        WeatherForCast = new javax.swing.JCheckBox();
        WeatherByCity = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        hodiny.setText("Hodiny");
        hodiny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hodinyActionPerformed(evt);
            }
        });

        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        WeatherForCast.setText("Weather For Cast");
        WeatherForCast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeatherForCastActionPerformed(evt);
            }
        });

        WeatherByCity.setText("Weather By City");
        WeatherByCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeatherByCityActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(199, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(122, 122, 122))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hodiny, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WeatherForCast)
                    .addComponent(WeatherByCity))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hodiny)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(WeatherByCity)
                .addGap(5, 5, 5)
                .addComponent(WeatherForCast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Search)
                .addGap(49, 49, 49)
                .addComponent(jButton1)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hodinyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hodinyActionPerformed
        // TODO add your handling code here:
        if(hodiny.isSelected()){
            AktivHodiny = true;
        }
        else{
            AktivHodiny = false;
        }
      
    }//GEN-LAST:event_hodinyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    System.out.println(AktivHodiny);
    System.out.println(AktivHWeatherByCity);
    System.out.println(AktivWeatherForecast);
    System.out.println(AktivSearch);

    
    addPanels();
  
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void WeatherByCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeatherByCityActionPerformed
        // TODO add your handling code here:
        if(WeatherByCity.isSelected()){
            AktivHWeatherByCity = true;
        }
        else{
            AktivHWeatherByCity = false;
        }
    }//GEN-LAST:event_WeatherByCityActionPerformed

    private void WeatherForCastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeatherForCastActionPerformed
        // TODO add your handling code here:
        if(WeatherForCast.isSelected()){
            AktivWeatherForecast = true;
        }
        else{
            AktivWeatherForecast = false;
        }
    }//GEN-LAST:event_WeatherForCastActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        if(Search.isSelected()){
            AktivSearch = true;
        }
        else{
            AktivSearch = false;
        }
    }//GEN-LAST:event_SearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         o = new Okno();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Manager().setVisible(true);
               
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Search;
    private javax.swing.JCheckBox WeatherByCity;
    private javax.swing.JCheckBox WeatherForCast;
    private javax.swing.JCheckBox hodiny;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables

    
    public void addPanels(){
     if(AktivHodiny){
     o.getPanelTime().getPanelTime().setVisible(true);
     }
     else{
     o.getPanelTime().getPanelTime().setVisible(false);
     }
     //--------------------------------------------
    if(AktivSearch){
     o.getPanelSearch().getPanelSearch().setVisible(true);
     }
     else{
     o.getPanelSearch().getPanelSearch().setVisible(false);
     }
     //--------------------------------------
     if(AktivHWeatherByCity){
     o.getPanelWBC().getPanelBackground().setVisible(true);
     }
     else{
     o.getPanelWBC().getPanelBackground().setVisible(false);
     }
     //-----------------------------------------
    if(AktivWeatherForecast){
     o.getPanelWF().getPanelWF().setVisible(true);
     }
     else{
     o.getPanelWF().getPanelWF().setVisible(false);
     }
    }

}
